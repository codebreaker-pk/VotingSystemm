{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shaurya\\\\Downloads\\\\SmartContract-Frontend-main\\\\SmartContract-Frontend-main\\\\VotingSystem\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// // src/App.js\n// import React, { useState, useEffect } from 'react';\n// import './App.css';\n// import { ethers } from 'ethers';\n// import detectEthereumProvider from '@metamask/detect-provider';\n// import VotingSystemABI from './contracts/VotingSystem.json';\n\n// const App = () => {\n//   const [candidateAVotes, setCandidateAVotes] = useState('');\n//   const [candidateBVotes, setCandidateBVotes] = useState('');\n//   const [walletAddress, setWalletAddress] = useState(''); \n//   const [provider, setProvider] = useState(null);\n//   const [contract, setContract] = useState(null);\n\n//   const contractAddress = '0x5FbDB2315678afecb367f032d93F642f64180aa3'; // Replace with your deployed contract address\n\n//   useEffect(() => {\n//     const initializeProvider = async () => {\n//       const provider = await detectEthereumProvider();\n\n//       if (provider) {\n//         setProvider(new ethers.providers.Web3Provider(provider));\n//       } else {\n//         console.error('Please install Metamask to interact with the wallet.');\n//       }\n//     };\n\n//     initializeProvider();\n//   }, []);\n\n//   useEffect(() => {\n//     if (provider) {\n//       const signer = provider.getSigner();\n//       setContract(new ethers.Contract(contractAddress, VotingSystemABI.abi, signer));\n//     }\n//   }, [provider]);\n\n//   const getVotes = async () => {\n//     if (contract) {\n//       try {\n//         const votesA = await contract.getCandidateAVotes();\n//         const votesB = await contract.getCandidateBVotes();\n//         setCandidateAVotes(votesA.toString());\n//         setCandidateBVotes(votesB.toString());\n//       } catch (error) {\n//         console.error('Error getting votes:', error);\n//       }\n//     }\n//   };\n\n//   useEffect(() => {\n//     if (contract) {\n//       getVotes();\n//     }\n//   }, [contract]);\n\n//   const voteForCandidateA = async () => {\n//     if (contract) {\n//       try {\n//         await contract.voteForCandidateA();\n//         getVotes();\n//       } catch (error) {\n//         console.error('Error voting for Candidate A:', error);\n//       }\n//     }\n//   };\n\n//   const voteForCandidateB = async () => {\n//     if (contract) {\n//       try {\n//         await contract.voteForCandidateB();\n//         getVotes();\n//       } catch (error) {\n//         console.error('Error voting for Candidate B:', error);\n//       }\n//     }\n//   };\n\n//   const connectWallet = async () => {\n//     if (provider) {\n//       try {\n//         const accounts = await provider.send('eth_requestAccounts', []);\n//         setWalletAddress(accounts[0]);\n//       } catch (error) {\n//         console.error('Error connecting to the wallet:', error);\n//       }\n//     }\n//   };\n\n//   const getOwnerAddress = async () => {\n//     if (contract) {\n//       try {\n//         const ownerAddress = await contract.getOwner();\n//         console.log('Owner Address:', ownerAddress);\n//       } catch (error) {\n//         console.error('Error retrieving owner address:', error);\n//       }\n//     }\n//   };\n\n//   useEffect(() => {\n//     if (contract) {\n//       getOwnerAddress();\n//     }\n//   }, [contract]);\n\n//   return (\n//     <div className=\"App\">\n//       <h1>Voting System Frontend</h1>\n//       <p>Wallet Address: {walletAddress}</p>\n//       <p>Votes for Candidate A: {candidateAVotes}</p>\n//       <p>Votes for Candidate B: {candidateBVotes}</p>\n//       <button onClick={connectWallet}>Connect Wallet</button>\n//       <button onClick={voteForCandidateA}>Vote for Candidate A</button>\n//       <button onClick={voteForCandidateB}>Vote for Candidate B</button>\n//     </div>\n//   );\n// };\n\n// export default App;\n\n// src/App.js\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport { ethers } from 'ethers';\nimport detectEthereumProvider from '@metamask/detect-provider';\nimport VotingSystemABI from './contracts/VotingSystem.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [candidateAVotes, setCandidateAVotes] = useState(0);\n  const [candidateBVotes, setCandidateBVotes] = useState(0);\n  const [totalVotes, setTotalVotes] = useState(0);\n  const [walletAddress, setWalletAddress] = useState('');\n  const [provider, setProvider] = useState(null);\n  const [contract, setContract] = useState(null);\n  const contractAddress = '0x5FbDB2315678afecb367f032d93F642f64180aa3'; // Replace with your deployed contract address\n\n  useEffect(() => {\n    const initializeProvider = async () => {\n      const provider = await detectEthereumProvider();\n      if (provider) {\n        setProvider(new ethers.providers.Web3Provider(provider));\n      } else {\n        console.error('Please install Metamask to interact with the wallet.');\n      }\n    };\n    initializeProvider();\n  }, []);\n  useEffect(() => {\n    if (provider) {\n      const signer = provider.getSigner();\n      setContract(new ethers.Contract(contractAddress, VotingSystemABI.abi, signer));\n    }\n  }, [provider]);\n  const getVotes = async () => {\n    if (contract) {\n      try {\n        const votesA = await contract.getCandidateAVotes();\n        const votesB = await contract.getCandidateBVotes();\n        setCandidateAVotes(parseInt(votesA));\n        setCandidateBVotes(parseInt(votesB));\n        const total = parseInt(votesA) + parseInt(votesB);\n        setTotalVotes(total);\n      } catch (error) {\n        console.error('Error getting votes:', error);\n      }\n    }\n  };\n  useEffect(() => {\n    if (contract) {\n      getVotes();\n    }\n  }, [contract]);\n  const voteForCandidateA = async () => {\n    if (contract) {\n      try {\n        await contract.voteForCandidateA();\n        getVotes();\n      } catch (error) {\n        console.error('Error voting for Candidate A:', error);\n      }\n    }\n  };\n  const voteForCandidateB = async () => {\n    if (contract) {\n      try {\n        await contract.voteForCandidateB();\n        getVotes();\n      } catch (error) {\n        console.error('Error voting for Candidate B:', error);\n      }\n    }\n  };\n  const connectWallet = async () => {\n    if (provider) {\n      try {\n        const accounts = await provider.send('eth_requestAccounts', []);\n        setWalletAddress(accounts[0]);\n      } catch (error) {\n        console.error('Error connecting to the wallet:', error);\n      }\n    }\n  };\n  const getOwnerAddress = async () => {\n    if (contract) {\n      try {\n        const ownerAddress = await contract.getOwner();\n        console.log('Owner Address:', ownerAddress);\n      } catch (error) {\n        console.error('Error retrieving owner address:', error);\n      }\n    }\n  };\n  useEffect(() => {\n    if (contract) {\n      getOwnerAddress();\n    }\n  }, [contract]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Voting System\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"wallet-info\",\n        children: walletAddress ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Wallet Address: \", walletAddress]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: connectWallet,\n          children: \"Connect Wallet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"vote-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Candidate A Votes:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Votes: \", candidateAVotes]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: voteForCandidateA,\n            children: \"Vote for A\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"vote-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Candidate B Votes:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Votes: \", candidateBVotes]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: voteForCandidateB,\n            children: \"Vote for B\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"vote-results\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Total Votes: \", totalVotes]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 235,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"AEUQfWdHlytJPn0evEHsb3bpe0U=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","ethers","detectEthereumProvider","VotingSystemABI","jsxDEV","_jsxDEV","App","_s","candidateAVotes","setCandidateAVotes","candidateBVotes","setCandidateBVotes","totalVotes","setTotalVotes","walletAddress","setWalletAddress","provider","setProvider","contract","setContract","contractAddress","initializeProvider","providers","Web3Provider","console","error","signer","getSigner","Contract","abi","getVotes","votesA","getCandidateAVotes","votesB","getCandidateBVotes","parseInt","total","voteForCandidateA","voteForCandidateB","connectWallet","accounts","send","getOwnerAddress","ownerAddress","getOwner","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/shaurya/Downloads/SmartContract-Frontend-main/SmartContract-Frontend-main/VotingSystem/src/App.js"],"sourcesContent":["// // src/App.js\n// import React, { useState, useEffect } from 'react';\n// import './App.css';\n// import { ethers } from 'ethers';\n// import detectEthereumProvider from '@metamask/detect-provider';\n// import VotingSystemABI from './contracts/VotingSystem.json';\n\n// const App = () => {\n//   const [candidateAVotes, setCandidateAVotes] = useState('');\n//   const [candidateBVotes, setCandidateBVotes] = useState('');\n//   const [walletAddress, setWalletAddress] = useState(''); \n//   const [provider, setProvider] = useState(null);\n//   const [contract, setContract] = useState(null);\n\n//   const contractAddress = '0x5FbDB2315678afecb367f032d93F642f64180aa3'; // Replace with your deployed contract address\n\n//   useEffect(() => {\n//     const initializeProvider = async () => {\n//       const provider = await detectEthereumProvider();\n\n//       if (provider) {\n//         setProvider(new ethers.providers.Web3Provider(provider));\n//       } else {\n//         console.error('Please install Metamask to interact with the wallet.');\n//       }\n//     };\n\n//     initializeProvider();\n//   }, []);\n\n//   useEffect(() => {\n//     if (provider) {\n//       const signer = provider.getSigner();\n//       setContract(new ethers.Contract(contractAddress, VotingSystemABI.abi, signer));\n//     }\n//   }, [provider]);\n\n//   const getVotes = async () => {\n//     if (contract) {\n//       try {\n//         const votesA = await contract.getCandidateAVotes();\n//         const votesB = await contract.getCandidateBVotes();\n//         setCandidateAVotes(votesA.toString());\n//         setCandidateBVotes(votesB.toString());\n//       } catch (error) {\n//         console.error('Error getting votes:', error);\n//       }\n//     }\n//   };\n\n//   useEffect(() => {\n//     if (contract) {\n//       getVotes();\n//     }\n//   }, [contract]);\n\n//   const voteForCandidateA = async () => {\n//     if (contract) {\n//       try {\n//         await contract.voteForCandidateA();\n//         getVotes();\n//       } catch (error) {\n//         console.error('Error voting for Candidate A:', error);\n//       }\n//     }\n//   };\n\n//   const voteForCandidateB = async () => {\n//     if (contract) {\n//       try {\n//         await contract.voteForCandidateB();\n//         getVotes();\n//       } catch (error) {\n//         console.error('Error voting for Candidate B:', error);\n//       }\n//     }\n//   };\n\n//   const connectWallet = async () => {\n//     if (provider) {\n//       try {\n//         const accounts = await provider.send('eth_requestAccounts', []);\n//         setWalletAddress(accounts[0]);\n//       } catch (error) {\n//         console.error('Error connecting to the wallet:', error);\n//       }\n//     }\n//   };\n\n//   const getOwnerAddress = async () => {\n//     if (contract) {\n//       try {\n//         const ownerAddress = await contract.getOwner();\n//         console.log('Owner Address:', ownerAddress);\n//       } catch (error) {\n//         console.error('Error retrieving owner address:', error);\n//       }\n//     }\n//   };\n\n//   useEffect(() => {\n//     if (contract) {\n//       getOwnerAddress();\n//     }\n//   }, [contract]);\n\n//   return (\n//     <div className=\"App\">\n//       <h1>Voting System Frontend</h1>\n//       <p>Wallet Address: {walletAddress}</p>\n//       <p>Votes for Candidate A: {candidateAVotes}</p>\n//       <p>Votes for Candidate B: {candidateBVotes}</p>\n//       <button onClick={connectWallet}>Connect Wallet</button>\n//       <button onClick={voteForCandidateA}>Vote for Candidate A</button>\n//       <button onClick={voteForCandidateB}>Vote for Candidate B</button>\n//     </div>\n//   );\n// };\n\n// export default App;\n\n\n\n\n// src/App.js\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport { ethers } from 'ethers';\nimport detectEthereumProvider from '@metamask/detect-provider';\nimport VotingSystemABI from './contracts/VotingSystem.json';\n\nconst App = () => {\n  const [candidateAVotes, setCandidateAVotes] = useState(0);\n  const [candidateBVotes, setCandidateBVotes] = useState(0);\n  const [totalVotes, setTotalVotes] = useState(0);\n  const [walletAddress, setWalletAddress] = useState('');\n  const [provider, setProvider] = useState(null);\n  const [contract, setContract] = useState(null);\n\n  const contractAddress = '0x5FbDB2315678afecb367f032d93F642f64180aa3'; // Replace with your deployed contract address\n\n  useEffect(() => {\n    const initializeProvider = async () => {\n      const provider = await detectEthereumProvider();\n\n      if (provider) {\n        setProvider(new ethers.providers.Web3Provider(provider));\n      } else {\n        console.error('Please install Metamask to interact with the wallet.');\n      }\n    };\n\n    initializeProvider();\n  }, []);\n\n  useEffect(() => {\n    if (provider) {\n      const signer = provider.getSigner();\n      setContract(new ethers.Contract(contractAddress, VotingSystemABI.abi, signer));\n    }\n  }, [provider]);\n\n  const getVotes = async () => {\n    if (contract) {\n      try {\n        const votesA = await contract.getCandidateAVotes();\n        const votesB = await contract.getCandidateBVotes();\n        setCandidateAVotes(parseInt(votesA));\n        setCandidateBVotes(parseInt(votesB));\n        const total = parseInt(votesA) + parseInt(votesB);\n        setTotalVotes(total);\n      } catch (error) {\n        console.error('Error getting votes:', error);\n      }\n    }\n  };\n\n  useEffect(() => {\n    if (contract) {\n      getVotes();\n    }\n  }, [contract]);\n\n  const voteForCandidateA = async () => {\n    if (contract) {\n      try {\n        await contract.voteForCandidateA();\n        getVotes();\n      } catch (error) {\n        console.error('Error voting for Candidate A:', error);\n      }\n    }\n  };\n\n  const voteForCandidateB = async () => {\n    if (contract) {\n      try {\n        await contract.voteForCandidateB();\n        getVotes();\n      } catch (error) {\n        console.error('Error voting for Candidate B:', error);\n      }\n    }\n  };\n\n  const connectWallet = async () => {\n    if (provider) {\n      try {\n        const accounts = await provider.send('eth_requestAccounts', []);\n        setWalletAddress(accounts[0]);\n      } catch (error) {\n        console.error('Error connecting to the wallet:', error);\n      }\n    }\n  };\n\n  const getOwnerAddress = async () => {\n    if (contract) {\n      try {\n        const ownerAddress = await contract.getOwner();\n        console.log('Owner Address:', ownerAddress);\n      } catch (error) {\n        console.error('Error retrieving owner address:', error);\n      }\n    }\n  };\n\n  useEffect(() => {\n    if (contract) {\n      getOwnerAddress();\n    }\n  }, [contract]);\n\n  return (\n    <div className=\"App\">\n      <header className=\"header\">\n        <h1>Voting System</h1>\n        <div className=\"wallet-info\">\n          {walletAddress ? (\n            <p>Wallet Address: {walletAddress}</p>\n          ) : (\n            <button onClick={connectWallet}>Connect Wallet</button>\n          )}\n        </div>\n      </header>\n      <div className=\"container\">\n        <div className=\"vote-card\">\n          <div>\n            <h2>Candidate A Votes:</h2>\n            <p>Votes: {candidateAVotes}</p>\n          </div>\n          <div>\n            <button onClick={voteForCandidateA}>Vote for A</button>\n          </div>\n        </div>\n        <div className=\"vote-card\">\n          <div>\n            <h2>Candidate B Votes:</h2>\n            <p>Votes: {candidateBVotes}</p>\n          </div>\n          <div>\n            <button onClick={voteForCandidateB}>Vote for B</button>\n          </div>\n        </div>\n        <div className=\"vote-results\">\n          <p>Total Votes: {totalVotes}</p>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}