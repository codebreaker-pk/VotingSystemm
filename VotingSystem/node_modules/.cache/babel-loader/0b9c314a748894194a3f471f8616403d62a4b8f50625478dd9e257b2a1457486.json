{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shaurya\\\\Downloads\\\\SmartContract-Frontend-main\\\\SmartContract-Frontend-main\\\\VotingSystem\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// src/App.js\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport { ethers } from 'ethers';\nimport detectEthereumProvider from '@metamask/detect-provider';\nimport VotingSystemABI from './contracts/VotingSystem.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [candidateAVotes, setCandidateAVotes] = useState('');\n  const [candidateBVotes, setCandidateBVotes] = useState('');\n  const [walletAddress, setWalletAddress] = useState('');\n  const [provider, setProvider] = useState(null);\n  const [contract, setContract] = useState(null);\n  const contractAddress = '0x5FbDB2315678afecb367f032d93F642f64180aa3'; // Replace with your deployed contract address\n\n  useEffect(() => {\n    const initializeProvider = async () => {\n      const provider = await detectEthereumProvider();\n      if (provider) {\n        setProvider(new ethers.providers.Web3Provider(provider));\n      } else {\n        console.error('Please install Metamask to interact with the wallet.');\n      }\n    };\n    initializeProvider();\n  }, []);\n  useEffect(() => {\n    if (provider) {\n      const signer = provider.getSigner();\n      setContract(new ethers.Contract(contractAddress, VotingSystemABI.abi, signer));\n    }\n  }, [provider]);\n  const getVotes = async () => {\n    if (contract) {\n      try {\n        const votesA = await contract.getCandidateAVotes();\n        const votesB = await contract.getCandidateBVotes();\n        setCandidateAVotes(votesA.toString());\n        setCandidateBVotes(votesB.toString());\n      } catch (error) {\n        console.error('Error getting votes:', error);\n      }\n    }\n  };\n  useEffect(() => {\n    if (contract) {\n      getVotes();\n    }\n  }, [contract]);\n  const voteForCandidateA = async () => {\n    if (contract) {\n      try {\n        await contract.voteForCandidateA();\n        getVotes();\n      } catch (error) {\n        console.error('Error voting for Candidate A:', error);\n      }\n    }\n  };\n  const voteForCandidateB = async () => {\n    if (contract) {\n      try {\n        await contract.voteForCandidateB();\n        getVotes();\n      } catch (error) {\n        console.error('Error voting for Candidate B:', error);\n      }\n    }\n  };\n  const connectWallet = async () => {\n    if (provider) {\n      try {\n        const accounts = await provider.send('eth_requestAccounts', []);\n        setWalletAddress(accounts[0]);\n      } catch (error) {\n        console.error('Error connecting to the wallet:', error);\n      }\n    }\n  };\n  const getOwnerAddress = async () => {\n    if (contract) {\n      try {\n        const ownerAddress = await contract.getOwner();\n        console.log('Owner Address:', ownerAddress);\n      } catch (error) {\n        console.error('Error retrieving owner address:', error);\n      }\n    }\n  };\n  useEffect(() => {\n    if (contract) {\n      getOwnerAddress();\n    }\n  }, [contract]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Voting System Frontend\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Wallet Address: \", walletAddress]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Votes for Candidate A: \", candidateAVotes]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Votes for Candidate B: \", candidateBVotes]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: connectWallet,\n      children: \"Connect Wallet\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: voteForCandidateA,\n      children: \"Vote for Candidate A\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: voteForCandidateB,\n      children: \"Vote for Candidate B\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"S3PuSUh5sRx4/Uq42EX/Xh1fwNs=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","ethers","detectEthereumProvider","VotingSystemABI","jsxDEV","_jsxDEV","App","_s","candidateAVotes","setCandidateAVotes","candidateBVotes","setCandidateBVotes","walletAddress","setWalletAddress","provider","setProvider","contract","setContract","contractAddress","initializeProvider","providers","Web3Provider","console","error","signer","getSigner","Contract","abi","getVotes","votesA","getCandidateAVotes","votesB","getCandidateBVotes","toString","voteForCandidateA","voteForCandidateB","connectWallet","accounts","send","getOwnerAddress","ownerAddress","getOwner","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/shaurya/Downloads/SmartContract-Frontend-main/SmartContract-Frontend-main/VotingSystem/src/App.js"],"sourcesContent":["// src/App.js\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport { ethers } from 'ethers';\nimport detectEthereumProvider from '@metamask/detect-provider';\nimport VotingSystemABI from './contracts/VotingSystem.json';\n\nconst App = () => {\n  const [candidateAVotes, setCandidateAVotes] = useState('');\n  const [candidateBVotes, setCandidateBVotes] = useState('');\n  const [walletAddress, setWalletAddress] = useState(''); \n  const [provider, setProvider] = useState(null);\n  const [contract, setContract] = useState(null);\n\n  const contractAddress = '0x5FbDB2315678afecb367f032d93F642f64180aa3'; // Replace with your deployed contract address\n\n  useEffect(() => {\n    const initializeProvider = async () => {\n      const provider = await detectEthereumProvider();\n\n      if (provider) {\n        setProvider(new ethers.providers.Web3Provider(provider));\n      } else {\n        console.error('Please install Metamask to interact with the wallet.');\n      }\n    };\n\n    initializeProvider();\n  }, []);\n\n  useEffect(() => {\n    if (provider) {\n      const signer = provider.getSigner();\n      setContract(new ethers.Contract(contractAddress, VotingSystemABI.abi, signer));\n    }\n  }, [provider]);\n\n  const getVotes = async () => {\n    if (contract) {\n      try {\n        const votesA = await contract.getCandidateAVotes();\n        const votesB = await contract.getCandidateBVotes();\n        setCandidateAVotes(votesA.toString());\n        setCandidateBVotes(votesB.toString());\n      } catch (error) {\n        console.error('Error getting votes:', error);\n      }\n    }\n  };\n\n  useEffect(() => {\n    if (contract) {\n      getVotes();\n    }\n  }, [contract]);\n\n  const voteForCandidateA = async () => {\n    if (contract) {\n      try {\n        await contract.voteForCandidateA();\n        getVotes();\n      } catch (error) {\n        console.error('Error voting for Candidate A:', error);\n      }\n    }\n  };\n\n  const voteForCandidateB = async () => {\n    if (contract) {\n      try {\n        await contract.voteForCandidateB();\n        getVotes();\n      } catch (error) {\n        console.error('Error voting for Candidate B:', error);\n      }\n    }\n  };\n\n  const connectWallet = async () => {\n    if (provider) {\n      try {\n        const accounts = await provider.send('eth_requestAccounts', []);\n        setWalletAddress(accounts[0]);\n      } catch (error) {\n        console.error('Error connecting to the wallet:', error);\n      }\n    }\n  };\n\n  const getOwnerAddress = async () => {\n    if (contract) {\n      try {\n        const ownerAddress = await contract.getOwner();\n        console.log('Owner Address:', ownerAddress);\n      } catch (error) {\n        console.error('Error retrieving owner address:', error);\n      }\n    }\n  };\n\n  useEffect(() => {\n    if (contract) {\n      getOwnerAddress();\n    }\n  }, [contract]);\n\n  return (\n    <div className=\"App\">\n      <h1>Voting System Frontend</h1>\n      <p>Wallet Address: {walletAddress}</p>\n      <p>Votes for Candidate A: {candidateAVotes}</p>\n      <p>Votes for Candidate B: {candidateBVotes}</p>\n      <button onClick={connectWallet}>Connect Wallet</button>\n      <button onClick={voteForCandidateA}>Vote for Candidate A</button>\n      <button onClick={voteForCandidateB}>Vote for Candidate B</button>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}